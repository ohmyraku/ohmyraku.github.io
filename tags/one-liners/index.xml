<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>one-liners on 山川异域, 风月同天</title>
    <link>https://ohmyraku.github.io/tags/one-liners/</link>
    <description>Recent content in one-liners on 山川异域, 风月同天</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>ohmyraku@outlook.com (ohmyraku)</managingEditor>
    <webMaster>ohmyraku@outlook.com (ohmyraku)</webMaster>
    <lastBuildDate>Fri, 12 Jun 2020 13:16:52 +0800</lastBuildDate><atom:link href="https://ohmyraku.github.io/tags/one-liners/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raku 单行程序</title>
      <link>https://ohmyraku.github.io/raku-one-liners/</link>
      <pubDate>Fri, 12 Jun 2020 13:16:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-one-liners/</guid>
      <description>1. 命令行选项 1.1. 使用命令行选项 我们来谈谈 Rakudo[1] 编译器为我们提供的命令行选项。
 1.1.1. -e 在使用 Raku 时要知道的第一个选项是 -e。它接收一个带有 Raku 单行程序的字符串，并立即执行。
 例如，打印当前用户的名字:
 $ raku -e&amp;#39;say $*USER&amp;#39; ash    1.1.2. -n 这个选项会重复每一行输入数据的代码。当你想处理一个文件时，这是很方便的。例如，这里有一个单行程序，它将每行中的值相加并打印出总和:
 $ raku -ne&amp;#39;say [+] .split(&amp;#34; &amp;#34;)&amp;#39; data.txt   如果 data.txt 文件包含以下内容：
 10 20 30 40 1 2 3 4 5 6 7 8   那么这个单行程序的结果就是:
 100 10 26   是否使用 shell 的输入重定向没有区别，下面这行也是可以的:
 $ raku -ne&amp;#39;say [+] .</description>
    </item>
    
  </channel>
</rss>
