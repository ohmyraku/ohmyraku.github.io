<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raku on 山川异域, 风月同天</title>
    <link>https://ohmyraku.github.io/tags/raku/</link>
    <description>Recent content in raku on 山川异域, 风月同天</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>ohmyraku@outlook.com (ohmyraku)</managingEditor>
    <webMaster>ohmyraku@outlook.com (ohmyraku)</webMaster>
    <lastBuildDate>Fri, 16 Oct 2020 22:51:52 +0800</lastBuildDate>
    
	<atom:link href="https://ohmyraku.github.io/tags/raku/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku Recipes</title>
      <link>https://ohmyraku.github.io/raku-recipes/</link>
      <pubDate>Fri, 16 Oct 2020 22:51:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-recipes/</guid>
      <description>Table of Contents 1. 输入和输出 1.1. 配方2-1. 读取作为参数处理的文件问题 1.2. 食谱 2-2. 异步读取和处理文件问题 1.3. 配方2-3 连接外部实用程序和文件的输入和输出 1.4. 食谱 2-4. 读取和处理二进制文件问题 1.5. 食谱 2-5. 观看文件的变化问题   2. 数据科学和数据分析 2.1. 配方 3-1. 从多个文件中提取唯一的电子邮件地址/用户名 2.2. 配方 3-2 创建一个加权随机数生成器 2.3. 配方3-3 用电子表格工作、过滤、排序和转换数据 2.4. 配方 3-4. 应用一系列的变换并从中提取数据。 2.5. 配方 3-5. 创建一个随机数据生成器 2.6. 配方 3-6. 处理大的、结构化的文件问题   3. 数学 3.1. 食谱 4-1. 生成数学序列并从中提取随机元素。 3.2. 食谱 4-2. 编程一个分而治之的算法 3.3. 食谱 4-3. 使用矩阵 3.4. 食谱 4-4. 计算 Mandelbrot 集 3.</description>
    </item>
    
    <item>
      <title>Raku 单行程序</title>
      <link>https://ohmyraku.github.io/raku-one-liners/</link>
      <pubDate>Fri, 12 Jun 2020 13:16:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-one-liners/</guid>
      <description>Table of Contents 1. 命令行选项 1.1. 使用命令行选项 1.2. 简短的单行程序的例子 1.3. 用 $*ARGFILES 读取文件   2. 使用文件 2.1. 重命名文件 2.2. 横向合并文件 2.3. 翻转文件   3. 使用数字 3.1. 对可分数进行移位 3.2. 生成随机整数 3.3. 与大数打交道 3.4. 测试回文数字 3.5. 斐波那契偶数的加法 3.6. 玩转斐波那契数字 3.7. 两点之间的距离 3.8. 玩质数 3.9. 使用 map 和 Seq 计算 π 的值 3.10. 求和 3.11. 数字之和等于各数字的阶乘之和 3.12. 通过立方体   4. 使用字符串 4.1. 生成随机密码 4.2. Unicode 的乐趣   5. 使用日期 5.</description>
    </item>
    
    <item>
      <title>用 Raku 写编译器</title>
      <link>https://ohmyraku.github.io/creating-a-compiler-with-raku/</link>
      <pubDate>Mon, 24 Feb 2020 12:54:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/creating-a-compiler-with-raku/</guid>
      <description>Table of Contents 1. 第一章 创建一个简单的解释器 1.1. Grammar 1.2. Actions 1.3. 模块   2. 第二章 解析数字 2.1. 查找数字 2.2. 获取值 2.3. 使用 AST 2.4. 最后的笔记   3. 第三章 创建计算器 3.1. 汇总 3.2. 过早的优化 3.3. 更多操作数 3.4. 多样性测试 3.5. 增加更多数学 3.6. 测试代码 3.7. 添加更多能量 3.8. 允许括号   4. 第四章 更好的解释器 4.1. 跳过注释 4.2. 复杂数字 4.3. 复杂表达式 4.4. 使用变量 4.5. 初始化声明   5. Grammar 学习 5.1. 可执行的 5.2. 组合和继承 Grammar 5.</description>
    </item>
    
    <item>
      <title>Cro 入门</title>
      <link>https://ohmyraku.github.io/cro/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/cro/</guid>
      <description>Table of Contents 1. Cro 开发工具 1.1. 存根服务 1.2. HTTP 服务 1.3. 运行服务 1.4. 追踪服务 1.5. 服务静态内容 1.6. 使用服务链接 1.7. URI 段匹配 1.8. 请求方法 1.9. 查询字符串,header 和 cookies 1.10. 访问 Cro::HTTP::Request 实例 1.11. 请求体 1.12. 添加自定义请求体解析器 1.13. 生成响应 1.14. 服务静态内容 1.15. 添加自定义响应体序列化器 1.16. 设置响应体缓存能力 1.17. Push 承诺 1.18. 组合路由 1.19. 代理路由到另一个 Cro::Transform 1.20. 在路由块中应用中间件 1.21. 基本示例 1.22. 为服务设置测试 1.23. 编写测试 1.24. 状态 1.25. 内容类型 1.26. 标题 1.27. body-text 1.28. body-blob 1.</description>
    </item>
    
    <item>
      <title>Raku Advent Calendar</title>
      <link>https://ohmyraku.github.io/raku-advent-calendar/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-advent-calendar/</guid>
      <description>Table of Contents 1. 第一天 – Raku 鬼精灵: 圣诞节实用指南 1.1. But True does False 1.2. Wrapping It Up 1.3. 看不见的斗篷 1.4. Ho-Ho-Ho 1.5. 结论   2. 第二天-Raku: 符号, 变量和容器 2.1. 把钱拿出来 2.2. 我们祝你有一个愉快的列表圣诞 2.3. That&amp;#8217;s Your Assignment 2.4. Position@lly 2.5. The One and Only 2.6. Decont 2.7. 不要让它溜走 2.8. I Want Less 2.9. Defaulting on Default Defaults 2.10. 自定义 2.11. 这就是全部，伙计 2.12. 结论   3. 第三天 – LetterOps with Raku 3.</description>
    </item>
    
    <item>
      <title>Raku at a glance</title>
      <link>https://ohmyraku.github.io/raku-at-a-glance/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-at-a-glance/</guid>
      <description>Table of Contents 1. Raku 概要 1.1. Hello, World 1.2. 变量 1.3. 内省 1.4. Twigils 1.5. 经常使用的特殊变量 1.6. 内置类型   2. 运算符 2.1. 前缀 2.2. 后缀 2.3. 方法后缀 2.4. 中缀运算符 2.5. 列表运算符 2.6. Junction 运算符 2.7. 短路运算符 2.8. 其它中缀运算符 2.9. 元运算符 2.10. 超运算符   3. 正则表达式和 Grammars 3.1. 正则表达式 3.2. $/ 对象 3.3. Grammars 3.4. Actions 3.5. AST 和属性 3.6. 计算器     1. Raku 概要 1.</description>
    </item>
    
    <item>
      <title>Raku 入门</title>
      <link>https://ohmyraku.github.io/raku-guide/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-guide/</guid>
      <description>Table of Contents 1. 序言 1.1. 什么是 Raku 1.2. 术语 1.3. 安装 Raku 1.4. 运行 Raku 代码 1.5. 编辑器 1.6. Hello World! 1.7. 语法概要   2. 运算符 2.1. 一般运算符 2.2. 反转运算符 2.3. 归约运算符   3. 变量 3.1. 标量 3.2. 数组 3.3. Hashes 哈希 3.4. 类型 3.5. 自省 3.6. 作用域 3.7. 赋值 vs. 绑定   4. 函数和修改器 5. 循环和条件语句 5.1. if 5.2. unless 5.3. with 5.4. for 5.5. given 5.</description>
    </item>
    
    <item>
      <title>Raku 基础</title>
      <link>https://ohmyraku.github.io/raku-by-example/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-by-example/</guid>
      <description>Table of Contents 1. 什么是 Raku 1.1. Perl5, 老天鹅 1.2. 库的可用性 1.3. 我为什么要使用 Raku? 1.4. 总结   2. 运行 Raku 2.1. 安装器 2.2. Docker 2.3. 从源代码创建 2.4. 测试你的 Rakudo Star 安装 2.5. 文档 2.6. 总结   3. 格式化数独字谜 3.1. 让数独变得可玩 3.2. 捷径、常量和更多的捷径 3.3. IO 和其它悲剧 3.4. 获得创造性 3.5. 总结   4. 日期时间转换命令行 4.1. 使用库 4.2. DateTime 格式化 4.3. 寻找其他途径 4.4. 处理时间 4.5. 系好你的安全带 4.6. MAIN 魔法 4.7. 自动化测试 4.</description>
    </item>
    
    <item>
      <title>Raku 学习手册</title>
      <link>https://ohmyraku.github.io/learning-raku/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/learning-raku/</guid>
      <description>Table of Contents 1. 介绍 1.1. 为什么是 Raku? 1.2. First Steps with the REPL 1.3. 阅读文档 1.4. 基础语法 1.5. Variables 1.6. Making and Running a Program 1.7. 总结   2. 猜数字 2.1. 绑定和赋值 2.2. A MAIN Program 2.3. Literal Numbers 2.4. Numeric Operations 2.5. Conditional Execution 2.6. Putting It All Together 2.7. Summary   3. 数字 3.1. Number Types 3.2. Integers 3.3. 有理数 3.4. Imaginary and Complex Numbers 3.</description>
    </item>
    
    <item>
      <title>Raku 官方文档</title>
      <link>https://ohmyraku.github.io/rakudoc/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/rakudoc/</guid>
      <description>目录 1. 通过例子学习 Raku 1.1. 指令 v6 1.2. 语句 1.3. 词法作用域和块 1.3.1. 魔符和标识符 1.3.2. 标量 1.3.3. 文件句柄和赋值 1.3.4. 字符串字面量   1.4. 数组、方法和调用 1.5. 散列 1.6. for 和 block 1.6.1. Any 和 += 1.6.2. 胖箭头、对儿和 autovivification 1.6.3. 后自增和前自增   1.7. 主题变量 1.7.1. 块 1.7.2. 稳定的排序   1.8. 标准输出 1.8.1. 变量插值 1.8.2. 双引号字符串和单引号字符串   1.9. 禅切 1.10. 练习   2. 关于文档 2.1. 结构 2.2. 从 Pod 生成 HTML 2.</description>
    </item>
    
    <item>
      <title>Raku 手册</title>
      <link>https://ohmyraku.github.io/begining-raku/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/begining-raku/</guid>
      <description>Table of Contents 1. 关于 Raku 1.1. Rakudo 1.2. 在浏览器中运行 Raku 1.3. REPL 1.4. 单行程序 1.5. 运行程序 1.6. 错误信息 1.7. use v6 1.8. 文档 1.9. 更多信息 1.10. 速度   2. 变量、运算符、值和过程 2.1. 使用 say 和 print 输出 2.2. 变量 2.3. 注释 2.4. 非破坏性运算符 2.5. 数值运算符 2.6. 运算符优先级 2.7. 值 2.8. 变量名 2.9. 常量 2.10. 无符号变量 2.11. True 和 False 2.12. //   3. 类型系统 3.1. 强类型 3.2. ^mro(方法解析顺序) 3.</description>
    </item>
    
    <item>
      <title>Raku 深入研究</title>
      <link>https://ohmyraku.github.io/raku-deep-dive/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-deep-dive/</guid>
      <description>Table of Contents 1. 什么是 Raku 1.1. Raku 起源 1.2. 与 Perl 5 的区别 1.3. 类 1.4. 与 Perl 5 的兼容性 1.5. Raku 资源 1.6. 文档 1.7. 测试套件 1.8. STD.pm 1.9. 社区 1.10. 编译器 1.11. 使用 Rakudo Star 1.12. 命令行选项 1.13. 总结   2. 编写代码 2.1. 使用 Unicode 2.2. 空白和反空白 2.3. 注释 2.4. phaser 2.5. 总结   3. 变量和内置数据类型 3.1. 使用变量 3.2. 使用简单的内置数据类型 3.3. 操作日期和时间的数据类型 3.4. 总结   4.</description>
    </item>
    
    <item>
      <title>Raku 语法小册</title>
      <link>https://ohmyraku.github.io/raku-quick-syntax-reference/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/raku-quick-syntax-reference/</guid>
      <description>Table of Contents 1. 运行 Raku 1.1. 在你自己的电脑上运行 Raku 1.2. Raku 在线 1.3. 命名行(和其它)选项 1.4. 结束语   2. 获取帮助 2.1. 第一响应者 2.2. IRC 频道和其它在线交流 2.3. 在线下获取帮助 2.4. 结束语   3. 字面值 3.1. 让我们来谈论 Unicode 3.2. 字面值表达式 3.3. 字符串？数字？同素异形体！ 3.4. 版本 3.5. 结束语   4. 表达式和运算符 4.1. 基本表达式 4.2. 算术 4.3. 字符串 4.4. 处理语法错误 4.5. 智能比较运算符 4.6. 注释：文档的重要组成部分 4.7. 逻辑 4.8. 结束语   5. 构建数据 5.1. 代码对象 5.</description>
    </item>
    
    <item>
      <title>使用 Raku</title>
      <link>https://ohmyraku.github.io/using-raku/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/using-raku/</guid>
      <description>Table of Contents 字符串 1. 1.1 使用字符串 1.1. 1. 你好, 世界! 1.2. 2. 跟人打招呼 1.3. 3. 字符串长度 1.4. 4. 唯一数字   2. 1.2 修改字符串数据 2.1. 5. 反转字符串 2.2. 6. 从字符串中移除空格 2.3. 7. 驼峰大小写 2.4. 8. 文件名递增 2.5. 9. 随机密码 2.6. 10. DNA 到 RNA 转换 2.7. 11. 凯撒密码   3. 1.3 文本分析 3.1. 12. 复数结尾 3.2. 13. 最常用单词 3.3. 14. 最长共同子串 3.4. 15. 回文测试 3.5. 16. 回文检验 3.6. 17.</description>
    </item>
    
    <item>
      <title>使用 Raku 正则表达式和 Grammars 进行解析</title>
      <link>https://ohmyraku.github.io/parsing-with-raku-regexes-and-grammars/</link>
      <pubDate>Wed, 05 Feb 2020 15:26:52 +0800</pubDate>
      <author>ohmyraku@outlook.com (ohmyraku)</author>
      <guid>https://ohmyraku.github.io/parsing-with-raku-regexes-and-grammars/</guid>
      <description>Table of Contents 1. 什么是正则表达式和 Grammar？ 1.1. 使用场景 1.2. 正则或正则表达式 1.3. Raku 正则表达式有什么特别之处   2. Raku 入门 2.1. 安装 Raku 2.2. 使用 Raku 2.3. 获取代码示例 2.4. 使用 Raku 的第一步 2.5. 总结   3. 正则表达式构造块 3.1. 字面量 3.2. 元字符与字面量 3.3. Anchors 3.4. 预定义字符类 3.5. 量词 3.6. 析取 3.7. 连接 3.8. 零宽断言 3.9. 总结   4. 正则表达式和 Raku 代码 4.1. 智能匹配 4.2. 引号形式 4.3. 修饰符 4.4. comb 和 split 4.</description>
    </item>
    
  </channel>
</rss>